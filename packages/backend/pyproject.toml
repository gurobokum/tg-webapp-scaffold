[tool.poetry]
name = "tg_webapp"
version = "0.1.0"
description = "TG WebApp"
authors = ["Guro Bokum <jiojiajiu@gmail.com>"]
license = "MIT"
readme = "README.md"
package-mode = false

[tool.taskipy.tasks]
dev = "uvicorn app.server:app --reload --reload-include .env"
worker = "watchfiles --filter python 'arq app.worker.WorkerSettings'"
lint = "ruff format --check . && ruff check --diff"
format = "ruff format"
mypy = "mypy ."
makemigrations = "alembic revision --autogenerate -m"
migrate = "alembic upgrade head"
printmigrations = "./scripts/print_migrations.sh"
generate_openapi = "python -m scripts.generate_openapi"

[tool.poetry.dependencies]
python = "^3.12"
sqlalchemy = {extras = ["asyncio"], version = "^2.0.40"}
fastapi = "^0.115.12"
asyncpg = "^0.30.0"
structlog = "^25.2.0"
pydantic = {extras = ["email"], version = "^2.11.3"}
pydantic-settings = "^2.9.1"
uvicorn = {extras = ["standard"], version = "^0.34.2"}
sqlalchemy-utils = {extras = ["encrypted", "password"], version = "^0.41.2"}
python-telegram-bot = "^22.0"
authlib = "^1.5.2"
arq = {extras = ["watch"], version = "^0.26.3"}
ruamel-yaml = "^0.18.10"
langchain = "^0.3.25"
langchain-openai = "^0.3.16"
replicate = "^1.0.6"
rich = "^14.0.0"
logfire = {extras = ["fastapi", "sqlalchemy"], version = "^3.16.0"}
boto3 = "<1.36.4"
types-boto = {extras = ["boto3", "s3"], version = "^2.49.18.20241019"}

[tool.poetry.group.dev.dependencies]
mypy = "^1.15.0"
ruff = "^0.11.7"
taskipy = "^1.14.1"
alembic = "^1.15.2"
alembic-postgresql-enum = "^1.7.0"
types-boto3 = {version = "1.36.3", extras = ["boto3", "s3"]}

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
# https://mypy.readthedocs.io/en/latest/config_file.html
strict_optional = true
show_error_codes = true
show_column_numbers = true
implicit_reexport = false
disallow_any_unimported = false
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_no_return = true
warn_return_any = true
warn_unused_configs = true
strict_equality = true
exclude = ["^examples/", "legacy/"]

[[tool.mypy.overrides]]
module = ["sqlalchemy_utils.*", "telethon.*", "authlib.*", "langchain_google_community.*"]
ignore_missing_imports = true

[tool.ruff]
# https://docs.astral.sh/ruff/configuration
line-length = 88 # default
indent-width = 4

[tool.ruff.lint]
extend-select = ["B", "I", "SIM", "UP"]
ignore = ["F401"]

[tool.ruff.format]
indent-style = "space"
